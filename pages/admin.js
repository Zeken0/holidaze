import React, { useState, useEffect } from "react";
import Head from "next/head";
import NavBar from "../components/NavBar";
import Footer from "../components/Footer";
import styles from "../styles/Home.module.scss";
import { Tabs, createStyles, Table, ScrollArea } from "@mantine/core";
import { MessageCircle } from "tabler-icons-react";
import axios from "axios";
import Link from "next/link";
import { parseCookies } from "nookies";
import { useRouter } from "next/router";

export default function Admin() {
  const [messages, setMessages] = useState([]);
  const [enquiries, setEnquiries] = useState([]);

  const router = useRouter();

  const fetchData = () => {
    const getMessages = axios.get("http://localhost:1337/api/messages");
    const getEnquiries = axios.get("http://localhost:1337/api/enquiries");

    axios.all([getMessages, getEnquiries]).then(
      axios.spread((...allData) => {
        console.log(allData);
        const allMessagesData = allData[0].data.data;
        const allEnquiriesData = allData[1].data.data;

        setMessages(allMessagesData);
        setEnquiries(allEnquiriesData);
      })
    );
  };

  useEffect(() => {
    const jwt = parseCookies().jwt;

    if (jwt === "null" || "undefined") {
      router.push("/loginPage");
    }
    fetchData();
  }, []);

  return (
    <div>
      <Head>
        <title>Admin | Holidaze</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content="Generated by create next app" />
      </Head>
      <NavBar />
      <main className={styles.admin_container}>
        <div className={styles.admin_action}>
          <h1>Admin</h1>
          <Link href={"/addPage/"}>
            <button className={styles.add_button}>Add establishment</button>
          </Link>
        </div>
        <div className={styles.admin_tabs}>
          <Tabs tabPadding="xl" color="orange" position="apart">
            <Tabs.Tab label="All">
              {enquiries.map((enquiry) => {
                return <h2 key={enquiry.id}>{enquiry.attributes.question}</h2>;
              })}
              {messages.map((message) => {
                return <h2 key={message.id}>{message.attributes.message}</h2>;
              })}
            </Tabs.Tab>
            <Tabs.Tab label="Enquiries" icon={<MessageCircle size={17} />}>
              {enquiries.map((enquiry) => {
                return <h2 key={enquiry.id}>{enquiry.attributes.question}</h2>;
              })}
            </Tabs.Tab>
            <Tabs.Tab label="Messages" icon={<MessageCircle size={17} />}>
              {messages.map((message) => {
                return <h2 key={message.id}>{message.attributes.message}</h2>;
              })}
            </Tabs.Tab>
          </Tabs>
        </div>
      </main>
      <Footer />
    </div>
  );
}
